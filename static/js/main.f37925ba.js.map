{"version":3,"file":"static/js/main.f37925ba.js","mappings":"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","sources":["index.js"],"sourcesContent":["function openTask(id) {\n    let xhr = new XMLHttpRequest();\n    const fold = window.innerWidth < 940 ? 'phone' : 'desc';\n    xhr.open(\"GET\", `tasks/${fold}/${id}.svg`, false);\n    xhr.overrideMimeType(\"image/svg+xml\");\n    xhr.onload = function (e) {\n        try {\n            const wrapper = document.createElement('div');\n            wrapper.classList.add('task_wrapper');\n\n            const modal = document.createElement('div');\n            modal.classList.add('task_modal');\n\n\n            modal.appendChild(xhr.responseXML.documentElement);\n            wrapper.appendChild(modal);\n            document.body.appendChild(wrapper);\n\n            function close(e) {\n                if (e.target !== e.currentTarget) return;\n                wrapper.removeEventListener('click', close);\n                wrapper.remove();\n            }\n\n            wrapper.addEventListener('click', close);\n\n            Array.from(wrapper.querySelectorAll('[data-type=\"tuskLink\"]'))\n                .forEach((el) => {\n                    el.addEventListener('click', () => {\n                        window.open('https://t.me/+dinM1xnv5fM1NTIy')\n                    })\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    };\n    xhr.send(\"\");\n}\n\nwindow.addEventListener('load', () => {\n\n    let xhr = new XMLHttpRequest();\n    const file = window.innerWidth < 940 ? 'phone' : 'desc';\n    xhr.open(\"GET\", `tasks/${file}.svg`, false);\n    xhr.overrideMimeType(\"image/svg+xml\");\n    xhr.onload = function (e) {\n        try {\n            document.querySelector('.full').appendChild(xhr.responseXML.documentElement);\n\n            const currentDate = (new Date()).getDate();\n            const $dayEl = document.getElementById('curentDay');\n\n            $dayEl.innerHTML = currentDate;\n\n\n            const windows = Array.from(document.querySelectorAll('[data-window]'))\n                .map((el) => {\n                    return {\n                        el: el,\n                        day: el.getAttribute('data-window')\n                    }\n                });\n            console.log(windows);\n\n\n            windows.forEach(({el, day}) => {\n                const dayAsNum = parseInt(day);\n                if (dayAsNum < 100) {\n                    el.setAttribute(\"fill\", '#AB2083')\n                    el.addEventListener('click', () => {\n                        openTask(day)\n                    })\n                } else {\n                    el.style.cursor = 'default'\n                }\n            })\n            // openTask('1')\n            Array.from(document.querySelectorAll(\"[data-answer]\")).forEach(el => {\n                el.addEventListener('click', () => {\n                    let xhr = new XMLHttpRequest();\n                    xhr.open(\"GET\", `tasks/answer/${el.getAttribute('data-answer')}.svg`, false);\n                    xhr.overrideMimeType(\"image/svg+xml\");\n                    xhr.onload = function (e) {\n                        try {\n                            const wrapper = document.createElement('div')\n                            wrapper.classList.add('wrapper_answer');\n\n                            wrapper.appendChild(xhr.responseXML.documentElement);\n\n                            function close() {\n                                wrapper.removeEventListener('click', close);\n                                wrapper.remove();\n                            }\n\n                            wrapper.addEventListener('click', close);\n                            document.body.appendChild(wrapper);\n                        } catch (e) {\n                            console.log(e)\n                        }\n                    };\n                    xhr.send(\"\");\n\n                })\n            })\n\n\n            try {\n                const gl = Array.from(document.querySelectorAll('[data-g]'));\n                const gc = Array.from(new Set(gl.map((el) => el.getAttribute('fill'))))\n                setInterval(() => {\n                    gl.forEach((g) => {\n                        g.setAttribute('fill', gc[Math.floor(Math.random() * gc.length)])\n                    })\n                }, 1500)\n                console.log(gc)\n\n            } catch (e) {\n                console.log(e)\n            }\n        } catch (e) {\n            console.log(e)\n        }\n    };\n    xhr.send(\"\");\n\n\n\n})"],"names":["window","addEventListener","xhr","XMLHttpRequest","file","innerWidth","open","concat","overrideMimeType","onload","e","document","querySelector","appendChild","responseXML","documentElement","currentDate","Date","getDate","getElementById","innerHTML","windows","Array","from","querySelectorAll","map","el","day","getAttribute","console","log","forEach","_ref","parseInt","setAttribute","id","fold","wrapper","createElement","classList","add","modal","body","close","target","currentTarget","removeEventListener","remove","send","openTask","style","cursor","gl","gc","Set","setInterval","g","Math","floor","random","length"],"sourceRoot":""}