{"version":3,"file":"static/js/main.4c035db2.js","mappings":"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","sources":["index.js"],"sourcesContent":["function openTask(id) {\n    let xhr = new XMLHttpRequest();\n    const fold = window.innerWidth < 940 ? 'phone' : 'desc';\n    xhr.open(\"GET\", `tasks/${fold}/${id}.svg`, false);\n    xhr.overrideMimeType(\"image/svg+xml\");\n    xhr.onload = function (e) {\n        try {\n            const wrapper = document.createElement('div');\n            wrapper.classList.add('task_wrapper');\n\n            const modal = document.createElement('div');\n            modal.classList.add('task_modal');\n\n\n            modal.appendChild(xhr.responseXML.documentElement);\n            wrapper.appendChild(modal);\n            document.body.appendChild(wrapper);\n\n            function close(e) {\n                if (e.target !== e.currentTarget) return;\n                wrapper.removeEventListener('click', close);\n                wrapper.remove();\n            }\n\n            wrapper.addEventListener('click', close);\n\n            Array.from(wrapper.querySelectorAll('[data-type=\"tuskLink\"]'))\n                .forEach((el) => {\n                    el.addEventListener('click', () => {\n                        window.open('https://t.me/+dinM1xnv5fM1NTIy')\n                    })\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    };\n    xhr.send(\"\");\n}\n\nwindow.addEventListener('load', () => {\n\n    let xhr = new XMLHttpRequest();\n    const file = window.innerWidth < 940 ? 'phone' : 'desc';\n    xhr.open(\"GET\", `tasks/${file}.svg`, false);\n    xhr.overrideMimeType(\"image/svg+xml\");\n    xhr.onload = function (e) {\n        try {\n            document.querySelector('.full').appendChild(xhr.responseXML.documentElement);\n\n            const currentDate = (new Date()).getDate();\n            const $dayEl = document.getElementById('curentDay');\n\n            $dayEl.innerHTML = currentDate;\n\n\n            const windows = Array.from(document.querySelectorAll('[data-window]'))\n                .map((el) => {\n                    return {\n                        el: el,\n                        day: el.getAttribute('data-window')\n                    }\n                });\n\n\n            windows.forEach(({el, day}) => {\n                const dayAsNum = parseInt(day);\n                if (dayAsNum < 100) {\n                    el.setAttribute(\"fill\", '#AB2083')\n                    el.addEventListener('click', () => {\n                        openTask(day)\n                    })\n                } else {\n                    el.style.cursor = 'default'\n                }\n            })\n\n            Array.from(document.querySelectorAll(\"[data-answer]\")).forEach(el => {\n                el.addEventListener('click', () => {\n                    let xhr = new XMLHttpRequest();\n                    xhr.open(\"GET\", `tasks/answer/${el.getAttribute('data-answer')}.svg`, false);\n                    xhr.overrideMimeType(\"image/svg+xml\");\n                    xhr.onload = function (e) {\n                        try {\n                            const wrapper = document.createElement('div')\n                            wrapper.classList.add('wrapper_answer');\n\n                            wrapper.appendChild(xhr.responseXML.documentElement);\n\n                            function close() {\n                                wrapper.removeEventListener('click', close);\n                                wrapper.remove();\n                            }\n\n                            wrapper.addEventListener('click', close);\n                            document.body.appendChild(wrapper);\n                        } catch (e) {\n                            console.log(e)\n                        }\n                    };\n                    xhr.send(\"\");\n\n                })\n            })\n\n\n            try {\n                const gl = Array.from(document.querySelectorAll('[data-g]'));\n                const gc = Array.from(new Set(gl.map((el) => el.getAttribute('fill'))))\n                setInterval(() => {\n                    gl.forEach((g) => {\n                        g.setAttribute('fill', gc[Math.floor(Math.random() * gc.length)])\n                    })\n                }, 1500)\n\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                function makeAnimation(el) {\n                    const steeps = Math.random() + 5 + 3;\n                    const transforms = Array.from({length: steeps}).fill(undefined).map((_, idx) => {\n                    const height = window.innerHeight;\n\n\n                        return {\n                            \"transform\": `translateY(${height * (idx  / steeps) - height  / 5}px)`,\n                            \"opacity\": 1 - (idx  / steeps)\n\n                        }\n                    })\n                    console.log(transforms)\n                    const newspaperTiming = {\n                        duration: Math.random() * 10000 + 1000,\n                        iterations: 1,\n                    };\n                    const animation = el.animate(transforms, newspaperTiming);\n                    animation.addEventListener('finish', () => {\n                        makeAnimation(el)\n                    })\n                }\n\n                Array.from(document.querySelectorAll(\"[data-snow]\")).forEach(makeAnimation);\n\n            } catch (e) {\n                console.log(e)\n            }\n        } catch (e) {\n            console.log(e)\n        }\n    };\n    xhr.send(\"\");\n\n\n})"],"names":["window","addEventListener","xhr","XMLHttpRequest","file","innerWidth","open","concat","overrideMimeType","onload","e","document","querySelector","appendChild","responseXML","documentElement","currentDate","Date","getDate","getElementById","innerHTML","Array","from","querySelectorAll","map","el","day","getAttribute","forEach","_ref","parseInt","setAttribute","id","fold","wrapper","createElement","classList","add","modal","body","close","target","currentTarget","removeEventListener","remove","console","log","send","openTask","style","cursor","gl","gc","Set","setInterval","g","Math","floor","random","length","makeAnimation","steeps","transforms","fill","undefined","_","idx","height","innerHeight","newspaperTiming","duration","iterations","animate"],"sourceRoot":""}